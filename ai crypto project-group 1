import time
import os
import requests
import urllib.parse
import hashlib
import hmac
import base64
# Read Kraken API key and secret stored in environment variables
api_url = "https://api.kraken.com"
api_key = 'J5p+hzvfeT760XsZyVxBsM2VLnTFAI+95uZDmF02jbheJWkmeycN6Bz6'
api_sec = '/lPnDmkN0AeCDORDVFLcVQ6Y2Qw0d76cfyP7jtXDbLdMedrsIXeDisjLlTS3HPRENqG9xrOGXDgTum6brkXxag=='
def get_kraken_signature(urlpath, data, secret):
 postdata = urllib.parse.urlencode(data)
 encoded = (str(data['nonce']) + postdata).encode()
 message = urlpath.encode() + hashlib.sha256(encoded).digest()
 mac = hmac.new(base64.b64decode(secret), message, hashlib.sha512)
 sigdigest = base64.b64encode(mac.digest())
 return sigdigest.decode()
def kraken_request(uri_path, data, api_key, api_sec):
headers = {}
    headers['API-Key'] = api_key
    # get_kraken_signature() as defined in the 'Authentication' section
    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             
    req = requests.post((api_url + uri_path), headers=headers, data=data)
    return req

# Construct the request and print the result
resp = kraken_request('/0/private/Balance', {
    "nonce": str(int(1000*time.time()))
}, api_key, api_sec)

print(resp.json())
